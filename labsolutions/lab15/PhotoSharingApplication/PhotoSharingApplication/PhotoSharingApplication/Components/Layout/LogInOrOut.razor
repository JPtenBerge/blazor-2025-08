@implements IDisposable

@inject NavigationManager NavigationManager


<AuthorizeView>
    <Authorized>
        <ul class="navbar-nav mb-2 mb-md-0">
            <li class="nav-item">
                <form class="d-flex" action="authentication/logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" class="nav-link">
                        Logout @context.User.Identity?.Name
                    </button>
                </form>
            </li>
        </ul>
    </Authorized>
    <NotAuthorized>
        <ul class="navbar-nav mb-2 mb-md-0">
            <li class="nav-item">
                <NavLink class="nav-link" href="authentication/login">
                    Login
                </NavLink>
            </li>
        </ul>
    </NotAuthorized>
</AuthorizeView>


@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
